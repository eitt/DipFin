Traceback (most recent call last):
  File "/usr/local/python/3.10.13/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/codespace/.local/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/local/python/3.10.13/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt

# Definir las funciones de activaciÃ³n
def sigmoid(x):
    return 1 / (1 + np.exp(-x))

def tanh(x):
    return np.tanh(x)

def relu(x):
    return np.maximum(0, x)

def leaky_relu(x, alpha=0.01):
    return np.where(x > 0, x, x * alpha)

def softmax(x):
    e_x = np.exp(x - np.max(x))
    return e_x / e_x.sum(axis=0)

# Valores de entrada para las funciones
x = np.linspace(-3, 3, 100)
y_sigmoid = sigmoid(x)
y_tanh = tanh(x)
y_relu = relu(x)
y_leaky_relu = leaky_relu(x)
x_softmax = np.array([0.5, 1.5, 3.0, 2.5, 1.0])  # Para softmax, usamos un conjunto de puntos
y_softmax = softmax(x_softmax)

# Crear grÃ¡ficos
plt.figure(figsize=(12, 8))

plt.subplot(2, 3, 1)
plt.plot(x, y_sigmoid, label="Sigmoid")
plt.title("Sigmoid")
plt.grid(True)

plt.subplot(2, 3, 2)
plt.plot(x, y_tanh, label="Tanh")
plt.title("Tanh")
plt.grid(True)

plt.subplot(2, 3, 3)
plt.plot(x, y_relu, label="ReLU")
plt.title("ReLU")
plt.grid(True)

plt.subplot(2, 3, 4)
plt.plot(x, y_leaky_relu, label="Leaky ReLU")
plt.title("Leaky ReLU")
plt.grid(True)

plt.subplot(2, 3, 5)
plt.stem(x_softmax, y_softmax, label="Softmax", use_line_collection=True)
plt.title("Softmax")
plt.grid(True)

plt.tight_layout()
plt.show()

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 54[0m
[1;32m     51[0m plt[38;5;241m.[39mgrid([38;5;28;01mTrue[39;00m)
[1;32m     53[0m plt[38;5;241m.[39msubplot([38;5;241m2[39m, [38;5;241m3[39m, [38;5;241m5[39m)
[0;32m---> 54[0m [43mplt[49m[38;5;241;43m.[39;49m[43mstem[49m[43m([49m[43mx_softmax[49m[43m,[49m[43m [49m[43my_softmax[49m[43m,[49m[43m [49m[43mlabel[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mSoftmax[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43muse_line_collection[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m     55[0m plt[38;5;241m.[39mtitle([38;5;124m"[39m[38;5;124mSoftmax[39m[38;5;124m"[39m)
[1;32m     56[0m plt[38;5;241m.[39mgrid([38;5;28;01mTrue[39;00m)

[0;31mTypeError[0m: stem() got an unexpected keyword argument 'use_line_collection'

